plugins {
    id 'fabric-loom' version '0.6-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven { url "https://maven.terraformersmc.com/releases" }
    maven { url "https://maven.shedaniel.me" }
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    // Only include in jar used api modules
    Set<String> apiModules = [
            "fabric-api-base",
            "fabric-crash-report-info-v1",
            "fabric-item-api-v1",
            "fabric-item-groups-v0",
            "fabric-networking-api-v1",
            "fabric-object-builder-api-v1",
            "fabric-registry-sync-v0",
            "fabric-resource-loader-v0",
            "fabric-screen-handler-api-v1",
            "fabric-tag-extensions-v0",
            "fabric-tool-attribute-api-v1",
    ]

    apiModules.forEach {
        include(modImplementation(fabricApi.module(it, project.fabric_version)))
    }

    // Dev mods
    devDependency "com.terraformersmc:modmenu:${project.modmenu_version}"
    devDependency "me.shedaniel:RoughlyEnoughItems:${project.rei_version}"
}

def devDependency(String dep) {
    dependencies.modRuntime (dep) {
        exclude group: "net.fabricmc.fabric-api"
        exclude module: "nbt-crafting"
    }
    dependencies.modCompileOnly (dep) {
        exclude group: "net.fabricmc.fabric-api"
        exclude module: "nbt-crafting"
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }

    // Exclude sources directory as they only useful on dev
    exclude "**/sources"
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile).configureEach() {
    it.options.encoding = "UTF-8"

    def targetVersion = 8
    if (JavaVersion.current().isJava9Compatible()) {
        it.options.release = targetVersion
    }
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }

            //artifact(sourcesJar) {
            //    builtBy remapSourcesJar
            //}
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        mavenLocal()
    }
}